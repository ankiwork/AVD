
/**-----------------------------------------------
 * ATBezier.h
 * This file is automatically generated, don't try to edit it
 * all modifications will be lost with next project saving
 **-----------------------------------------------*/

#ifndef _ATBEZIER_H_
#define _ATBEZIER_H_

// Structures for cubic Bezier curve:

typedef struct tagGSVisObjBezierP
{
  float x;
  float y;
} tGSVisObjBezierP;

typedef struct tagGSVisObjBezier4P
{
  tGSVisObjBezierP p1;
  tGSVisObjBezierP c1;
  tGSVisObjBezierP c2;
  tGSVisObjBezierP p2;
} tGSVisObjBezier4P;

typedef struct tagGSVisObjBezier2P
{
  tGSVisObjBezierP c2;
  tGSVisObjBezierP p2;
} tGSVisObjBezier2P;

typedef struct tagGSVisObjBezierValues1
{
  uint32_t mMode;  /* 1 = Separate (4 points per curve) */
  uint32_t mNumCrvs;
  //tGSVisObjBezier4P mCrv[];  // This member must be added by user-C code with needed dimension! see examples below
} tGSVisObjBezierValues1;

typedef struct tagGSVisObjBezierValues2
{
  uint32_t mMode;  /* 2 = Ongoing (4 points for first curve, followed by 2 points per curve) */
  uint32_t mNumCrvs;
  tGSVisObjBezier4P m1stCrv;
  //tGSVisObjBezier2P mCrv[];  // This member must be added by user-C code with needed dimension! see examples below
} tGSVisObjBezierValues2;


// --------------------------------
// Project-C code example (Mode 1):
//   
//   typedef struct
//   {
//     tGSVisObjBezierValues1 bv;  // Note: bv could be renamed
//     tGSVisObjBezier4P mCrv[5];  // Note: mCrv could be renamed
//   } bezVal1;                    // Note: bezVal1 could be renamed
//   
//   ...
//   
//   bezVal1 bv1;                  // Note: bv1 could be renamed
//   bv1.bv.mMode = 1;
//   bv1.bv.mNumCrvs = 5;          // Or less
//   bv1.mCrv[0].p1.x = 252.0f;
//   bv1.mCrv[0].p1.y = 187.0f;
//   bv1.mCrv[0].c1.x = 634.0f;
//   bv1.mCrv[0].c1.y =   5.0f;
//   bv1.mCrv[0].c2.x = 635.0f;
//   bv1.mCrv[0].c2.y = 211.0f;
//   bv1.mCrv[0].p2.x = 438.0f;
//   bv1.mCrv[0].p2.y = 169.0f;
//   ...and so on...
//   bv1.mCrv[4].c2.x = 635.0f;
//   bv1.mCrv[4].c2.y = 221.0f;
//   bv1.mCrv[4].p2.x = 438.0f;
//   bv1.mCrv[4].p2.y = 179.0f;
//   SetVisObjData(OBJ_ATBEZIER0, &bv1.bv, sizeof(bv));
// 
// --------------------------------
// Project-C code example (Mode 2):
//   typedef struct
//   {
//     tGSVisObjBezierValues2 bv;   // Note: bv could be renamed
//     tGSVisObjBezier2P mCrv[17];  // Note: mCrv could be renamed
//   } bezVal2;                     // Note: bezVal2 could be renamed
//   
//   ...
//   
//   bezVal2 bv2;                   // Note: bv2 could be renamed
//   bv2.bv.mMode = 2;
//   bv2.bv.mNumCrvs = 17;          // Or less
//   bv2.bv.m1stCrv.p1.x = 252.0f;
//   bv2.bv.m1stCrv.p1.y = 187.0f;
//   bv2.bv.m1stCrv.c1.x = 634.0f;
//   bv2.bv.m1stCrv.c1.y =   5.0f;
//   bv2.bv.m1stCrv.c2.x = 635.0f;
//   bv2.bv.m1stCrv.c2.y = 211.0f;
//   bv2.bv.m1stCrv.p2.x = 438.0f;
//   bv2.bv.m1stCrv.p2.y = 169.0f;
//   bv2.mCrv[0].c2.x = 482.0f;
//   bv2.mCrv[0].c2.y = 292.0f;
//   bv2.mCrv[0].p2.x = 262.0f;
//   bv2.mCrv[0].p2.y = 314.0f;
//   ...and so on...
//   bv2.mCrv[16].p2.x = 586.0f;
//   bv2.mCrv[16].p2.y = 192.0f;
//   SetVisObjData(OBJ_ATBEZIER0, &bv2.bv, sizeof(bv));

#endif  //_ATBEZIER_H_

